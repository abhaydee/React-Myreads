{"version":3,"sources":["BooksAPI.js","Shelf.js","Search.js","Main.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Shelf","image","_this","this","props","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","onChange","event","moveshelf","target","value","currentshelf","disabled","title","authors","Component","Search","state","searchedbooks","updateinput","setState","searchingbooks","trim","undefined","BooksAPI","error","forEach","b","s","filter","B","_this2","react_router_dom","to","type","placeholder","map","searching","key","src_Shelf","Main","onClick","showSearchPage","BooksApp","screen","_this3","react_router","exact","path","render","src_Main","src_Search","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8dde5d89.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react';\nimport './App.css'\n\n\nclass Shelf extends Component{\n  \n\trender() {\n        let image;\n        if(typeof this.props.book.imageLinks === 'undefined')\n        {\n            image=''\n        }\n        else\n        {\n            image=this.props.book.imageLinks.thumbnail\n        }\n\n  \n\n\t\treturn (\n\t\t\t\n\t\t\n                      <li>\n                        <div className=\"book\">\n                            <div className=\"book-top\">\n                                <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: `url(${image})` }}></div>\n                                <div className=\"book-shelf-changer\">\n                                    <select onChange={(event)=> {this.props.moveshelf(this.props.book,event.target.value)}}\n                                      value={this.props.currentshelf }>\n                                        <option value=\"move\" disabled>Move to...</option>\n                                        <option value=\"currentlyReading\">Currently Reading</option>\n                                        <option value=\"wantToRead\">Want to Read</option>\n                                        <option value=\"read\">Read</option>\n                                        <option value=\"none\">None</option>\n                                    </select>\n\n\n\n                                    </div>\n                              </div>\n                              <div className=\"book-title\">{this.props.book.title}</div>\n                              <div className=\"book-authors\">{this.props.book.authors}</div>     \n                               \n                            </div>\n                      \n                      </li>\n                      \n                      \n                        \n                      \n                      \n\t\t);\n\t}\n}\nexport default Shelf;","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport * as BooksAPI from \"./BooksAPI\";\nimport Shelf from \"./Shelf\";\nimport { Link } from \"react-router-dom\";\n\nclass Search extends Component {\n  state = {\n    query: \"\",\n    searchedbooks: []\n  };\n\n  updateinput = query => {\n    this.setState({ query: query });\n    this.searchingbooks(query);\n  };\n\n  searchingbooks = query => {\n    if (query.trim()) {\n      if (\n        this.state.query.trim() === \"\" ||\n        this.state.query.trim() === undefined\n      ) {\n        this.setState({ searchedbooks: [] });\n      }\n\n      {\n        BooksAPI.search(query).then(books => {\n          if (books.error) {\n            this.setState({ searchedbooks: [] });\n          } else {\n            books.forEach(b => {\n              let s = this.props.books.filter(B => B.id === b.id);\n              if (s[0]) {\n                b.shelf = s[0].shelf;\n              }\n            });\n            return this.setState({ searchedbooks: books });\n          }\n        });\n      }\n    } else {\n      this.setState({ searchedbooks: [] });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to=\"/\">\n            {\" \"}\n            Close{\" \"}\n          </Link>\n\n          <div className=\"search-books-input-wrapper\">\n            {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={this.state.query}\n              onChange={event => {\n                this.updateinput(event.target.value);\n              }}\n            />\n            {/*{JSON.stringify(this.state)}*/}\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {this.state.searchedbooks.map(searching => {\n              let shelf = \"none\";\n              this.props.books.map(book =>\n                book.id === searching.id ? (shelf = book.shelf) : \"\"\n              );\n              return (\n                <div key={searching.id}>\n                  <Shelf\n                    book={searching}\n                    moveshelf={this.props.moveshelf}\n                    currentshelf={shelf}\n                  />\n                </div>\n              );\n            })}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Search;\n","import React, {Component} from 'react';\nimport './App.css'\nimport Shelf from './Shelf'\n\n\nclass Main extends Component{\n\trender() {\n\n\t\treturn (\n\t\t\t\n\t\t\t<div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                  <div className=\"bookshelf-books\">\n                  <ol className=\"books-grid\">\n                    {this.props.books\n                        .filter(book =>book.shelf === 'currentlyReading')\n                        .map(book =>(\n                          <div key={book.id}>\n                          <Shelf book={book} moveshelf={this.props.moveshelf}\n                            currentshelf=\"currentlyReading\"\n                          />\n                          </div>\n                        ))\n                      \n                      \n                      }\n                      \n                     \n                    </ol>\n                  </div>\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                    {this.props.books\n                        .filter(book =>book.shelf === 'wantToRead')\n                        .map(book =>(\n                          <div key={book.id}>\n                          <Shelf book={book} moveshelf={this.props.moveshelf}\n                            currentshelf=\"wantToRead\"\n                          />\n                          </div>\n                        ))\n                      \n                      \n                      }\n                      \n                     \n                    </ol>\n                  </div>\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                    {this.props.books\n                      .filter(book => book.shelf === 'read')\n                      .map(book => (\n                        <div key={book.id}>\n                        <Shelf book={book} moveshelf={this.props.moveshelf}\n                            currentshelf=\"read\"\n                          />\n                       </div>\n                      ))\n                      \n                      }\n                    \n                      \n                    </ol>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n          </div>\n\t\t);\n\t}\n}\nexport default Main;","import React from 'react'\n\nimport Search from './Search';\n\nimport {\n  Route,Link\n} from 'react-router-dom'\nimport Main from './Main';\nimport './App.css'\nimport * as BooksAPI from './BooksAPI'\n\n\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    screen: '/',\n    books: [\n\n    ]\n  }\n\n  componentWillMount() {\n    BooksAPI.getAll().then((books) => {\n      this.setState({\n        books: books\n      })\n\n    })\n  }\n\n  moveshelf=(book,shelf)=>{\n    \n    BooksAPI.update(book,shelf)\n    BooksAPI.getAll().then((books) => {\n\n      books.shelf=shelf\n\n       this.setState({\n         books: books\n       })\n \n     })\n\n  }\n\n  render() {\n    return ( \n        <div className = \"app\" >\n        <Route exact path = \"/\"\n        render = {() => (\n            \n            <Main books={this.state.books} moveshelf={this.moveshelf} />\n            \n            \n        )}/>\n        \n            <Route exact path = \"/search\" render = { () => ( \n            <Search moveshelf={this.moveshelf} books={this.state.books}/>\n\n        )}/>\n        <Route exact path = \"/\" render = { () => ( \n                    <Link className=\"open-search\" to={\"/Search\"}>\n                        <button>Add a book</button>\n                    </Link>\n            )} />\n        </div>\n    )}\n}\nexport default BooksApp;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, \n    document.getElementById('root'))\n"],"sourceRoot":""}